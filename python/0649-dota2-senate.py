# LeetCode Problem 649: Dota2 Senate
# Link: https://leetcode.com/problems/dota2-senate/
# Difficulty: Medium

# üß† Idea:
# - Usamos duas filas para armazenar os √≠ndices dos senadores de cada partido.
# - Em cada rodada, comparamos os primeiros senadores de cada fila.
#   Quem estiver mais √† frente age primeiro e bane o outro.
# - O vencedor volta ao final da fila com √≠ndice aumentado de +n (simulando fila circular).
# - O processo continua at√© que uma das filas fique vazia.

# üïí Time Complexity: O(n¬≤) no pior caso (muitas intera√ß√µes entre partidos).
# üß† Space Complexity: O(n), para armazenar os √≠ndices dos senadores.

from collections import deque

class Solution:
    def predictPartyVictory(self, senate: str) -> str:
        n = len(senate)
        radiant = deque()
        dire = deque()

        # Separar os √≠ndices dos senadores por partido
        for i, s in enumerate(senate):
            if s == 'R':
                radiant.append(i)
            else:
                dire.append(i)

        # Simular a vota√ß√£o em rodadas
        while radiant and dire:
            r_idx = radiant.popleft()
            d_idx = dire.popleft()

            # Quem tiver o √≠ndice menor age primeiro
            if r_idx < d_idx:
                radiant.append(r_idx + n)
            else:
                dire.append(d_idx + n)

        return "Radiant" if radiant else "Dire"
